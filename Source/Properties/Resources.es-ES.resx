<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Parameters" xml:space="preserve">
    <value>Parámetros</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Genera las páginas wiki para GitHub a partir de la documentación del código fuente.</value>
  </data>
  <data name="Assembly" xml:space="preserve">
    <value>La ruta del archivo de ensamblado a documentar.</value>
  </data>
  <data name="FileNameMode" xml:space="preserve">
    <value>El formato del nombre de archivo de las páginas Markdown generadas.</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Muestra la ayuda de esta aplicación.</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>El nombre de la página de inicio predeterminada.</value>
  </data>
  <data name="InvalidCharReplacement" xml:space="preserve">
    <value>El carácter que reemplaza todos los caracteres no válidos para nombres de archivo.</value>
  </data>
  <data name="NestedTypeVisibility" xml:space="preserve">
    <value>El tipo de visibilidad de los tipos anidados.</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>La ruta de la carpeta en la que se generarán las páginas Markdown.</value>
  </data>
  <data name="Xml" xml:space="preserve">
    <value>La ruta del archivo XML de documentación generado por el compilador.</value>
  </data>
  <data name="GetHelp" xml:space="preserve">
    <value>Para obtener más información, escriba {0} {1}</value>
  </data>
  <data name="CannotParse" xml:space="preserve">
    <value>No se puede analizar.</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>Tiene un formato incorrecto: {0}</value>
  </data>
  <data name="NotSpecified" xml:space="preserve">
    <value>No se ha especificado.</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>No se ha encontrado: {0}</value>
  </data>
  <data name="CannotConvert" xml:space="preserve">
    <value>No puede convertir {0} a {1}.</value>
  </data>
  <data name="CannotCreate" xml:space="preserve">
    <value>No se puede crear: {0}</value>
  </data>
  <data name="Syntax" xml:space="preserve">
    <value>Sintaxis</value>
  </data>
  <data name="ErrorWrittingDoc" xml:space="preserve">
    <value>Se ha producido un error mientras se escribía la documentación de {0}</value>
  </data>
  <data name="Values" xml:space="preserve">
    <value>Valores</value>
  </data>
  <data name="FileNameModeMd5" xml:space="preserve">
    <value>Establece un hash MD5 (a partir nombre completo del miembro) como nombre de la página de Markdown.</value>
  </data>
  <data name="FileNameModeName" xml:space="preserve">
    <value>Establece el tipo y el nombre del miembro sin el espacio de nombres como el nombre del archivo Markdown. Puede producirse una colisión si el proyecto tiene varios tipos con el mismo nombre en diferentes espacios de nombres.</value>
  </data>
  <data name="FileNameModeFullName" xml:space="preserve">
    <value>Establece el nombre completo del miembro como nombre del archivo Markdown.</value>
  </data>
  <data name="NestedTypeVisibilityNamespace" xml:space="preserve">
    <value>Los enlaces de tipo anidado se muestran en la página del espacio de nombres.</value>
  </data>
  <data name="NestedTypeVisibilityDeclaringType" xml:space="preserve">
    <value>Los enlaces de tipo anidado se muestran en la página de su tipo declarante.</value>
  </data>
  <data name="NestedTypeVisibilityEverywhere" xml:space="preserve">
    <value>Los enlaces de tipo anidado se muestran tanto en el espacio de nombres como en la página de su tipo declarante.</value>
  </data>
</root>